.deploy-image:
  image: docker:19.03.13
  services:
    - docker:19.03.13-dind
  before_script:
    - cat $GCLOUD_SERVICE_KEY | docker login -u _json_key --password-stdin https://$GCR_HOST
  script:
    - docker build . -t $GCR_HOST/$GCLOUD_PROJECT_ID/$IMAGE_NAME:$CI_COMMIT_TAG
    - docker push $GCR_HOST/$GCLOUD_PROJECT_ID/$IMAGE_NAME:$CI_COMMIT_TAG
  dependencies:
    - build

.deploy-image-to-pamo:
  image: profyu/awscli:1.18.63
  services:
    - docker:19.03.13-dind
  before_script:
    - export AWS_ACCESS_KEY_ID=$PAMO_AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$PAMO_AWS_SECRET_ACCESS_KEY
    - export AWS_DEFAULT_REGION=$PAMO_AWS_REGION
    - aws ecr get-login-password | docker login --username AWS --password-stdin $PAMO_ECR
    - aws ecr describe-repositories --repository-names ${IMAGE_NAME} || aws ecr create-repository --repository-name ${IMAGE_NAME}
  script:
    - docker build . -t $PAMO_ECR/$IMAGE_NAME:$CI_COMMIT_TAG
    - docker push $PAMO_ECR/$IMAGE_NAME:$CI_COMMIT_TAG
  dependencies:
    - build

.deploy-chart:
  image: alpine/k8s:1.21.2
  script:
    - helm repo add --username $HELM_REGISTRY_USERNAME --password $HELM_REGISTRY_PASSWORD profyu $HELM_REGISTRY_URL
    - helm package $CHART_DIR --app-version $CI_COMMIT_TAG --version $CI_COMMIT_TAG
    - helm push $CHART_NAME-$CI_COMMIT_TAG.tgz profyu

.rollout:
  image: alpine/k8s:1.21.2
  before_script:
    - mkdir -p $HOME/.kube && cp $DEV_KUBE_CONFIG $HOME/.kube/config
  script:
    - helm repo add --username $HELM_REGISTRY_USERNAME --password $HELM_REGISTRY_PASSWORD profyu $HELM_REGISTRY_URL
    - helm upgrade --install -n $KUBE_DEPLOY_NS --version $CI_COMMIT_TAG -f $CHAR_VALUES_FILE $RELEASE_NAME profyu/$CHART_NAME

stages:
  - validate
  - build
  - test
  - codegen
  - deploy-image
  - deploy-chart
  - rollout

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  IMAGE_NAME: pamo-law-firm-sales-campaign
  CHART_NAME: pamo-law-firm-sales-campaign
  CHART_DIR: ./chart/pamo-law-firm-sales-campaign

build:
  stage: build
  image : mcr.microsoft.com/dotnet/sdk:5.0
  script:
    - dotnet build
  artifacts:
    paths:
    - dist/

deploy-image:
  extends: .deploy-image
  stage: deploy-image
  only:
    refs:
      - /^\d+\.\d+\.\d+-BETA$/

deploy-image-to-pamo:
  extends: .deploy-image-to-pamo
  stage: deploy-image
  only:
    refs:
      - /^\d+\.\d+\.\d+$/

deploy-chart:
  extends: .deploy-chart
  stage: deploy-chart
  only:
    refs:
      - /^\d+\.\d+\.\d+-BETA$/
      - /^\d+\.\d+\.\d+$/

rollout-dev:
  extends: .rollout
  stage: rollout
  variables:
    KUBE_DEPLOY_NS: insta-law-dev
    RELEASE_NAME: pamo-law-firm-sales-campaign-dev
    CHAR_VALUES_FILE: ./chart/values-dev.yaml
  only:
    refs:
      - /^\d+\.\d+\.\d+-BETA$/

rollout-prod:
  extends: .rollout
  stage: rollout
  variables:
    KUBE_DEPLOY_NS: prod
    RELEASE_NAME: pamo-law-firm-sales-campaign
    CHAR_VALUES_FILE: ./chart/values-prod.yaml
  only:
    refs:
      - /^\d+\.\d+\.\d+$/
  before_script:
    - export AWS_ACCESS_KEY_ID=$PAMO_AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$PAMO_AWS_SECRET_ACCESS_KEY
    - export AWS_DEFAULT_REGION=$PAMO_AWS_REGION
    - aws eks update-kubeconfig --region $PAMO_AWS_REGION --name $PAMO_EKS_PRODUCTION
